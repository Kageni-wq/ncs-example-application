#ifndef __AT_DSP_H__
#define __AT_DSP_H__

enum {
    EV_ADC_START,
    EV_ADC_ACK,
    EV_ADC_READY,
    EV_ADC_VOLUME,
    EV_ADC_MUTE,
    EV_ADC_POWER,
    EV_ADC_FILTER,
    EV_ADC_AUDIO,
    EV_ADC_BOOT,
    EV_ADC_STATUS,
    EV_ADC_ERROR,
    EV_ADC_UNKNOWN,
    END_OF_ADC_EVENTS
};

enum {
    START_OF_ADC_COMMANDS,
    CMD_ADC_ACK,
    CMD_ADC_START,
    CMD_ADC_INCREASE_VOLUME,
    CMD_ADC_DECREASE_VOLUME,
    CMD_ADC_SET_MODE,
    CMD_ADC_POWER,
    CMD_ADC_AUDIO,
    CMD_ADC_STATUS_REQUEST,
    CMD_ADC_MUTE,
    CMD_ADC_UNMUTE,
    CMD_ADC_SET_FILTER,
    CMD_ADC_SET_VOLUME,
    CMD_ADC_RESET,
    END_OF_ADC_COMMANDS
};

int ATM_DspInit(int id);

// Handler function prototypes
void ADC_HandleStart(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleAck(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleReady(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleVolume(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleMute(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandlePower(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleFilter(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleAudio(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleBoot(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleStatus(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleError(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);
void ADC_HandleUnknown(char param[CONFIG_MAX_PARAMS_PER_EVENT][CONFIG_MAX_PARAM_LENGTH]);

#endif // __AT_DSP_H__p